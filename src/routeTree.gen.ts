/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DocsRouteImport } from './routes/docs'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ComponentsIndexRouteImport } from './routes/components/index'
import { Route as BuilderIndexRouteImport } from './routes/builder/index'
import { Route as BlocksIndexRouteImport } from './routes/blocks/index'
import { Route as PreviewSignUpRouteImport } from './routes/preview/sign-up'
import { Route as PreviewShippingInfoRouteImport } from './routes/preview/shipping-info'
import { Route as PreviewRichTextRouteImport } from './routes/preview/rich-text'
import { Route as PreviewPhoneInputRouteImport } from './routes/preview/phone-input'
import { Route as PreviewPasswordInputRouteImport } from './routes/preview/password-input'
import { Route as PreviewLoginRouteImport } from './routes/preview/login'
import { Route as PreviewBlogEditorRouteImport } from './routes/preview/blog-editor'
import { Route as PreviewBasicInfoRouteImport } from './routes/preview/basic-info'

const DocsRoute = DocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsIndexRoute = ComponentsIndexRouteImport.update({
  id: '/components/',
  path: '/components/',
  getParentRoute: () => rootRouteImport,
} as any)
const BuilderIndexRoute = BuilderIndexRouteImport.update({
  id: '/builder/',
  path: '/builder/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlocksIndexRoute = BlocksIndexRouteImport.update({
  id: '/blocks/',
  path: '/blocks/',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewSignUpRoute = PreviewSignUpRouteImport.update({
  id: '/preview/sign-up',
  path: '/preview/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewShippingInfoRoute = PreviewShippingInfoRouteImport.update({
  id: '/preview/shipping-info',
  path: '/preview/shipping-info',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewRichTextRoute = PreviewRichTextRouteImport.update({
  id: '/preview/rich-text',
  path: '/preview/rich-text',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewPhoneInputRoute = PreviewPhoneInputRouteImport.update({
  id: '/preview/phone-input',
  path: '/preview/phone-input',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewPasswordInputRoute = PreviewPasswordInputRouteImport.update({
  id: '/preview/password-input',
  path: '/preview/password-input',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewLoginRoute = PreviewLoginRouteImport.update({
  id: '/preview/login',
  path: '/preview/login',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewBlogEditorRoute = PreviewBlogEditorRouteImport.update({
  id: '/preview/blog-editor',
  path: '/preview/blog-editor',
  getParentRoute: () => rootRouteImport,
} as any)
const PreviewBasicInfoRoute = PreviewBasicInfoRouteImport.update({
  id: '/preview/basic-info',
  path: '/preview/basic-info',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/docs': typeof DocsRoute
  '/preview/basic-info': typeof PreviewBasicInfoRoute
  '/preview/blog-editor': typeof PreviewBlogEditorRoute
  '/preview/login': typeof PreviewLoginRoute
  '/preview/password-input': typeof PreviewPasswordInputRoute
  '/preview/phone-input': typeof PreviewPhoneInputRoute
  '/preview/rich-text': typeof PreviewRichTextRoute
  '/preview/shipping-info': typeof PreviewShippingInfoRoute
  '/preview/sign-up': typeof PreviewSignUpRoute
  '/blocks': typeof BlocksIndexRoute
  '/builder': typeof BuilderIndexRoute
  '/components': typeof ComponentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/docs': typeof DocsRoute
  '/preview/basic-info': typeof PreviewBasicInfoRoute
  '/preview/blog-editor': typeof PreviewBlogEditorRoute
  '/preview/login': typeof PreviewLoginRoute
  '/preview/password-input': typeof PreviewPasswordInputRoute
  '/preview/phone-input': typeof PreviewPhoneInputRoute
  '/preview/rich-text': typeof PreviewRichTextRoute
  '/preview/shipping-info': typeof PreviewShippingInfoRoute
  '/preview/sign-up': typeof PreviewSignUpRoute
  '/blocks': typeof BlocksIndexRoute
  '/builder': typeof BuilderIndexRoute
  '/components': typeof ComponentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/docs': typeof DocsRoute
  '/preview/basic-info': typeof PreviewBasicInfoRoute
  '/preview/blog-editor': typeof PreviewBlogEditorRoute
  '/preview/login': typeof PreviewLoginRoute
  '/preview/password-input': typeof PreviewPasswordInputRoute
  '/preview/phone-input': typeof PreviewPhoneInputRoute
  '/preview/rich-text': typeof PreviewRichTextRoute
  '/preview/shipping-info': typeof PreviewShippingInfoRoute
  '/preview/sign-up': typeof PreviewSignUpRoute
  '/blocks/': typeof BlocksIndexRoute
  '/builder/': typeof BuilderIndexRoute
  '/components/': typeof ComponentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/docs'
    | '/preview/basic-info'
    | '/preview/blog-editor'
    | '/preview/login'
    | '/preview/password-input'
    | '/preview/phone-input'
    | '/preview/rich-text'
    | '/preview/shipping-info'
    | '/preview/sign-up'
    | '/blocks'
    | '/builder'
    | '/components'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/docs'
    | '/preview/basic-info'
    | '/preview/blog-editor'
    | '/preview/login'
    | '/preview/password-input'
    | '/preview/phone-input'
    | '/preview/rich-text'
    | '/preview/shipping-info'
    | '/preview/sign-up'
    | '/blocks'
    | '/builder'
    | '/components'
  id:
    | '__root__'
    | '/'
    | '/docs'
    | '/preview/basic-info'
    | '/preview/blog-editor'
    | '/preview/login'
    | '/preview/password-input'
    | '/preview/phone-input'
    | '/preview/rich-text'
    | '/preview/shipping-info'
    | '/preview/sign-up'
    | '/blocks/'
    | '/builder/'
    | '/components/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocsRoute: typeof DocsRoute
  PreviewBasicInfoRoute: typeof PreviewBasicInfoRoute
  PreviewBlogEditorRoute: typeof PreviewBlogEditorRoute
  PreviewLoginRoute: typeof PreviewLoginRoute
  PreviewPasswordInputRoute: typeof PreviewPasswordInputRoute
  PreviewPhoneInputRoute: typeof PreviewPhoneInputRoute
  PreviewRichTextRoute: typeof PreviewRichTextRoute
  PreviewShippingInfoRoute: typeof PreviewShippingInfoRoute
  PreviewSignUpRoute: typeof PreviewSignUpRoute
  BlocksIndexRoute: typeof BlocksIndexRoute
  BuilderIndexRoute: typeof BuilderIndexRoute
  ComponentsIndexRoute: typeof ComponentsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components/': {
      id: '/components/'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/builder/': {
      id: '/builder/'
      path: '/builder'
      fullPath: '/builder'
      preLoaderRoute: typeof BuilderIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/blocks/': {
      id: '/blocks/'
      path: '/blocks'
      fullPath: '/blocks'
      preLoaderRoute: typeof BlocksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/sign-up': {
      id: '/preview/sign-up'
      path: '/preview/sign-up'
      fullPath: '/preview/sign-up'
      preLoaderRoute: typeof PreviewSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/shipping-info': {
      id: '/preview/shipping-info'
      path: '/preview/shipping-info'
      fullPath: '/preview/shipping-info'
      preLoaderRoute: typeof PreviewShippingInfoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/rich-text': {
      id: '/preview/rich-text'
      path: '/preview/rich-text'
      fullPath: '/preview/rich-text'
      preLoaderRoute: typeof PreviewRichTextRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/phone-input': {
      id: '/preview/phone-input'
      path: '/preview/phone-input'
      fullPath: '/preview/phone-input'
      preLoaderRoute: typeof PreviewPhoneInputRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/password-input': {
      id: '/preview/password-input'
      path: '/preview/password-input'
      fullPath: '/preview/password-input'
      preLoaderRoute: typeof PreviewPasswordInputRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/login': {
      id: '/preview/login'
      path: '/preview/login'
      fullPath: '/preview/login'
      preLoaderRoute: typeof PreviewLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/blog-editor': {
      id: '/preview/blog-editor'
      path: '/preview/blog-editor'
      fullPath: '/preview/blog-editor'
      preLoaderRoute: typeof PreviewBlogEditorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/preview/basic-info': {
      id: '/preview/basic-info'
      path: '/preview/basic-info'
      fullPath: '/preview/basic-info'
      preLoaderRoute: typeof PreviewBasicInfoRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocsRoute: DocsRoute,
  PreviewBasicInfoRoute: PreviewBasicInfoRoute,
  PreviewBlogEditorRoute: PreviewBlogEditorRoute,
  PreviewLoginRoute: PreviewLoginRoute,
  PreviewPasswordInputRoute: PreviewPasswordInputRoute,
  PreviewPhoneInputRoute: PreviewPhoneInputRoute,
  PreviewRichTextRoute: PreviewRichTextRoute,
  PreviewShippingInfoRoute: PreviewShippingInfoRoute,
  PreviewSignUpRoute: PreviewSignUpRoute,
  BlocksIndexRoute: BlocksIndexRoute,
  BuilderIndexRoute: BuilderIndexRoute,
  ComponentsIndexRoute: ComponentsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
