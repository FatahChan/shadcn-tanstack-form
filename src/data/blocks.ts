export const blocks = [
  {
    slug: "basic-info",
    title: "Basic Info",
    category: "user",
    preview: "/preview/user/basic-info",
    code: '\n\nimport { Button } from "@/components/ui/button";\nimport { Input } from "@/components/ui/input";\nimport { useAppForm } from "@/components/ui/tanstack-form";\nimport { useCallback } from "react";\nimport { toast } from "sonner";\nimport { z } from "zod";\n\nconst FormSchema = z.object({\n  username: z.string().min(2, {\n    message: "Username must be at least 2 characters.",\n  }),\n  email: z.string().email({\n    message: "Please enter a valid email address.",\n  }),\n  age: z.coerce.number().min(18, {\n    message: "Age must be at least 18.",\n  }),\n  bio: z.string().max(160, {\n    message: "Bio must not exceed 160 characters.",\n  }),\n});\n\nexport default function UserInfoForm() {\n  const form = useAppForm({\n    validators: { onBlur: FormSchema },\n    defaultValues: {\n      username: "",\n      email: "",\n      age: 0,\n      bio: "",\n    },\n    onSubmit: ({ formApi, value }) => {\n      formApi.reset();\n      toast.success(<span>Username: {value.username}</span>);\n    },\n  });\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      form.handleSubmit();\n    },\n    [form],\n  );\n  return (\n    <form.AppForm>\n      <form\n        className="mx-auto w-full max-w-lg space-y-8 rounded-md border p-4 py-10"\n        onSubmit={handleSubmit}\n      >\n        <div className="grid grid-cols-1 items-start gap-4 md:grid-cols-2">\n          <form.AppField\n            name="username"\n            children={(field) => (\n              <field.FormItem className="space-y-1.5">\n                <field.FormLabel>Username</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    placeholder="FatahChan"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(e.target.value)}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormDescription className="text-xs">\n                  This is your public display name.\n                </field.FormDescription>\n                <field.FormMessage className="text-xs" />\n              </field.FormItem>\n            )}\n          />\n          <form.AppField\n            name="email"\n            children={(field) => (\n              <field.FormItem className="space-y-1.5">\n                <field.FormLabel>Email</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    type="email"\n                    placeholder="example@email.com"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(e.target.value)}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormDescription className="text-xs">\n                  Enter your email address for account verification.\n                </field.FormDescription>\n                <field.FormMessage className="text-xs" />\n              </field.FormItem>\n            )}\n          />\n          <form.AppField\n            name="age"\n            children={(field) => (\n              <field.FormItem className="space-y-1.5">\n                <field.FormLabel>Age</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    type="text"\n                    inputMode="numeric"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(Number(e.target.value))}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormDescription className="text-xs">\n                  Must be at least 18 years old.\n                </field.FormDescription>\n                <field.FormMessage className="text-xs" />\n              </field.FormItem>\n            )}\n          />\n          <form.AppField\n            name="bio"\n            children={(field) => (\n              <field.FormItem className="space-y-1.5">\n                <field.FormLabel>Bio</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    placeholder="Tell us about yourself"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(e.target.value)}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormDescription className="text-xs">\n                  A brief description about yourself (optional).\n                </field.FormDescription>\n                <field.FormMessage className="text-xs" />\n              </field.FormItem>\n            )}\n          />\n        </div>\n        <Button type="submit" className="w-full">\n          Create Account\n        </Button>\n      </form>\n    </form.AppForm>\n  );\n}\n',
  },
];
