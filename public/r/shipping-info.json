{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "shipping-info",
  "type": "registry:block",
  "title": "Shipping Info",
  "description": "A shipping information form component built with TanStack Form.",
  "dependencies": [
    "zod"
  ],
  "registryDependencies": [
    "https://shadcn-tanstack-form.netlify.app/r/tanstack-form.json",
    "button",
    "input"
  ],
  "files": [
    {
      "path": "src/registry/new-york/blocks/shipping-info.tsx",
      "content": "\"use client\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useAppForm } from \"@/components/ui/tanstack-form\";\nimport { useCallback } from \"react\";\nimport type { FormHTMLAttributes } from \"react\";\nimport { z } from \"zod\";\n\nconst shippingSchema = z.object({\n  fullName: z.string().min(2, {\n    message: \"Full name must be at least 2 characters long.\",\n  }),\n  addressLine1: z.string().min(5, {\n    message: \"Address must be at least 5 characters long.\",\n  }),\n  addressLine2: z.string(),\n  city: z.string().min(2, {\n    message: \"City must be at least 2 characters long.\",\n  }),\n  state: z.string().min(2, {\n    message: \"State must be at least 2 characters long.\",\n  }),\n  postalCode: z.string().min(4, {\n    message: \"Please enter a valid postal code.\",\n  }),\n  phone: z.string().min(8, {\n    message: \"Please enter a valid phone number.\",\n  }),\n});\n\ninterface ShippingFormProps\n  extends Omit<FormHTMLAttributes<HTMLFormElement>, \"onSubmit\"> {\n  onSubmit: (data: z.infer<typeof shippingSchema>) => void;\n  defaultValues?: z.infer<typeof shippingSchema>;\n}\n\nfunction ShippingForm({\n  onSubmit,\n  defaultValues,\n  className,\n  ...props\n}: ShippingFormProps) {\n  const form = useAppForm({\n    defaultValues: {\n      fullName: defaultValues?.fullName ?? \"\",\n      addressLine1: defaultValues?.addressLine1 ?? \"\",\n      addressLine2: defaultValues?.addressLine2 ?? \"\",\n      city: defaultValues?.city ?? \"\",\n      state: defaultValues?.state ?? \"\",\n      postalCode: defaultValues?.postalCode ?? \"\",\n      phone: defaultValues?.phone ?? \"\",\n    },\n    validators: { onBlur: shippingSchema },\n    onSubmit: ({ value }) => {\n      onSubmit(value);\n    },\n  });\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      form.handleSubmit();\n    },\n    [form],\n  );\n\n  return (\n    <form.AppForm>\n      <form\n        className=\"mx-auto w-full max-w-lg space-y-6 rounded-lg border p-6\"\n        onSubmit={handleSubmit}\n        {...props}\n      >\n        <form.AppField\n          name=\"fullName\"\n          children={(field) => (\n            <field.FormItem>\n              <field.FormLabel>Full Name</field.FormLabel>\n              <field.FormControl>\n                <Input\n                  placeholder=\"John Doe\"\n                  value={field.state.value}\n                  onChange={(e) => field.handleChange(e.target.value)}\n                  onBlur={field.handleBlur}\n                />\n              </field.FormControl>\n              <field.FormMessage />\n            </field.FormItem>\n          )}\n        />\n\n        <form.AppField\n          name=\"addressLine1\"\n          children={(field) => (\n            <field.FormItem>\n              <field.FormLabel>Address Line 1</field.FormLabel>\n              <field.FormControl>\n                <Input\n                  placeholder=\"123 Main St\"\n                  value={field.state.value}\n                  onChange={(e) => field.handleChange(e.target.value)}\n                  onBlur={field.handleBlur}\n                />\n              </field.FormControl>\n              <field.FormMessage />\n            </field.FormItem>\n          )}\n        />\n\n        <form.AppField\n          name=\"addressLine2\"\n          children={(field) => (\n            <field.FormItem>\n              <field.FormLabel>Address Line 2 (Optional)</field.FormLabel>\n              <field.FormControl>\n                <Input\n                  placeholder=\"Apt 4B\"\n                  value={field.state.value}\n                  onChange={(e) => field.handleChange(e.target.value)}\n                  onBlur={field.handleBlur}\n                />\n              </field.FormControl>\n              <field.FormMessage />\n            </field.FormItem>\n          )}\n        />\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <form.AppField\n            name=\"city\"\n            children={(field) => (\n              <field.FormItem>\n                <field.FormLabel>City</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    placeholder=\"New York\"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(e.target.value)}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormMessage />\n              </field.FormItem>\n            )}\n          />\n\n          <form.AppField\n            name=\"state\"\n            children={(field) => (\n              <field.FormItem>\n                <field.FormLabel>State</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    placeholder=\"NY\"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(e.target.value)}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormMessage />\n              </field.FormItem>\n            )}\n          />\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          <form.AppField\n            name=\"postalCode\"\n            children={(field) => (\n              <field.FormItem>\n                <field.FormLabel>Postal Code</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    placeholder=\"10001\"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(e.target.value)}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormMessage />\n              </field.FormItem>\n            )}\n          />\n\n          <form.AppField\n            name=\"phone\"\n            children={(field) => (\n              <field.FormItem>\n                <field.FormLabel>Phone Number</field.FormLabel>\n                <field.FormControl>\n                  <Input\n                    type=\"tel\"\n                    placeholder=\"+1 (555) 000-0000\"\n                    value={field.state.value}\n                    onChange={(e) => field.handleChange(e.target.value)}\n                    onBlur={field.handleBlur}\n                  />\n                </field.FormControl>\n                <field.FormMessage />\n              </field.FormItem>\n            )}\n          />\n        </div>\n\n        <Button type=\"submit\" className=\"w-full\">\n          Save Shipping Information\n        </Button>\n      </form>\n    </form.AppForm>\n  );\n}\n\nShippingForm.displayName = \"ShippingForm\";\nShippingForm.__CATEGORIES = [\"forms\", \"checkout\"];\nShippingForm.__TITLE = \"Shipping Info\";\nShippingForm.__DESCRIPTION =\n  \"A shipping information form component built with TanStack Form.\";\nShippingForm.__DEPENDENCIES = [\"zod\"];\nShippingForm.__REGISTRY_DEPENDENCIES = [\n  \"https://shadcn-tanstack-form.netlify.app/r/tanstack-form.json\",\n  \"button\",\n  \"input\",\n];\n\nexport default ShippingForm;\n",
      "type": "registry:block"
    }
  ],
  "categories": [
    "forms",
    "checkout"
  ]
}